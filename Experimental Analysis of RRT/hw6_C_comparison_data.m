% This script produces the data for running an example comparison
% between the basic RRT and the modified RRT. 
%
% The data generated by this file will be modified by the autograder.

clear 

dist = 1;           % Distance from goal for successful run

% Instantiate a bicycle vehicle without noise, with steering limit 1.2 and
% max speed 2.5
veh = Bicycle('L', 1,'steermax',1.2,'speedmax',2.5);

% Define a map with polygonal obstacles
V1 = [4,10; 10,10; 10,4; 12,4; 12,12; 2,12; 2,6; 4,4];
p1 = Polygon(V1');
V2 = [17,13; 19,7; 22,8; 20,23; 18,23];
p2 = Polygon(V2');
P = [p1 p2];
% Create an occupancy grid from the polygonal environment
maxRange = [25,25]; % maximum range for x and y position
map1 = Polygon2OccMap(p1,maxRange);
map2 = Polygon2OccMap(p2,maxRange);
map3 = Polygon2OccMap(P,maxRange);

% Define some scenarios
scenarios(1).map = map3;
scenarios(1).start = [6 5 0]; 
scenarios(1).goal = [23 14 pi/2]; 
scenarios(2).map = map1;
scenarios(2).start = [6 5 0]; 
scenarios(2).goal = [1 3 -pi/2]; 
scenarios(3).map = map2;
scenarios(3).start = [15 10 0]; 
scenarios(3).goal = [23 14 pi/2]; 

% The bounding box over which RRT samples for adding new points:
% range = [xmin, xmax. ymin, ymax]
range = [0, maxRange(1), 0, maxRange(2)]; 

n_tests = 10;       % Number of times to run the RRT algorithm (you can modify for your testing)
n_nodes = 1000;      % Max number of nodes for the RRT 

%% For your own use (your submission should not plot anything)
% Plot the environment and an RRT tree to visualize how RRT works
k = 2; % You need to test for all scenarios, here we select one for demonstration
rrt = RRTmap(veh,scenarios(k).map,'root',scenarios(2).start,'goal',scenarios(2).goal,'range',range,'npoints',floor(n_nodes));
rrt.plan(); % create the rrt
G = rrt.graph; % extract the graph 
figure
rrt.plot;
figure
rrt.query(scenarios(k).start,scenarios(k).goal);
%%

%% Call your function and return the results of your analysis
[better_RRT, results] = hw6_comparison(scenarios,n_tests,n_nodes,veh,dist,range)
